#include <bits/stdc++.h>
using namespace std;
int dp[1001][1001];
int knapsack(int wt[],int v[],int W,int n){
    if(n==0 || W==0)
        return 0;
    if(dp[n][W]!=-1)
        return dp[n][W];
    if(wt[n-1]<=W)
        return dp[n][W]=max(v[n-1] + knapsack(wt,v,W-wt[n-1],n) , knapsack(wt,v,W,n-1));
    else if(wt[n-1]>W)
        return dp[n][W]=knapsack(wt,v,W,n-1);
}
int main() {
	//code
	
	int t; cin>>t;
	while(t--){
	    memset(dp,-1,sizeof(dp));
	    int n; cin>>n;
	    int price[n],length[n];
	    for(int i=0;i<n;i++) cin>>price[i];
	    for(int i=0;i<n;i++) length[i]=i+1;
	    cout<<knapsack(length,price,n,n)<<endl;
	}
	return 0;
}
